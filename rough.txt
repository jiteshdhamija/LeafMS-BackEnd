Detaching and terminating target process
connection error: Error: read ECONNRESET
dlv dap (21812) exited with code: 0
Starting: C:\Users\hrish\go\bin\dlv.exe dap --listen=127.0.0.1:50400 from D:\Projects\LeafMS-BackEnd
DAP server listening at: 127.0.0.1:50400
Type 'dlv help' for list of commands.
Pinged your deployment. You successfully connected to MongoDB!
2024/04/09 01:23:00 started login api
2024/04/09 01:23:00 validated cred
2024/04/09 01:25:02 started login api
2024/04/09 01:25:02 validated cred
2024/04/09 01:28:39 started login api
2024/04/09 01:28:39 validated cred
r.body
Unable to evaluate expression: r has no member body
r.body
Unable to evaluate expression: r has no member body
r
*net/http.Request {Method: "PUT", URL: *net/url.URL {Scheme: "", Opaque: "", User: *net/url.Userinfo nil, Host: "", Path: "/apply", RawPath: "", OmitHost: false, ForceQuery: false, RawQuery: "", Fragment: "", RawFragment: ""}, Proto: "HTTP/1.1", ProtoMajor...
net/http.Request {Method: "PUT", URL: *net/url.URL {Scheme: "", Opaque: "", User: *net/url.Userinfo nil, Host: "", Path: "/apply", RawPath: "", OmitHost: false, ForceQuery: false, RawQuery: "", Fragment: "", RawFragment: ""}, Proto: "HTTP/1.1", ProtoMajor:...
Method: "PUT"
URL: *net/url.URL {Scheme: "", Opaque: "", User: *net/url.Userinfo nil, Host: "", Path: "/apply", RawPath: "", OmitHost: false, ForceQuery: false, RawQuery: "", Fragment: "", RawFragment: ""}
Proto: "HTTP/1.1"
ProtoMajor: 1
ProtoMinor: 1
Header: net/http.Header ["User-Agent": ["PostmanRuntime/7.37.3"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate, br"], "Connection": ["keep-alive"], "Content-Length": ["104"], "Authorization": ["eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTI2OTI3MTks...
Body: io.ReadCloser(*net/http.body) *{src: io.Reader(*io.LimitedReader) ..., hdr: interface {} nil, r: *bufio.Reader nil, closing: false, doEarlyClose: true, mu: (*sync.Mutex)(0xc000068cac), sawEOF: true, closed: false, earlyClose: false, onHitEOF: net/http.(*co...
data: *net/http.body {src: io.Reader(*io.LimitedReader) ..., hdr: interface {} nil, r: *bufio.Reader nil, closing: false, doEarlyClose: true, mu: (*sync.Mutex)(0xc000068cac), sawEOF: true, closed: false, earlyClose: false, onHitEOF: net/http.(*connReader).startB...
net/http.body {src: io.Reader(*io.LimitedReader) ..., hdr: interface {} nil, r: *bufio.Reader nil, closing: false, doEarlyClose: true, mu: (*sync.Mutex)(0xc000068cac), sawEOF: true, closed: false, earlyClose: false, onHitEOF: net/http.(*connReader).startBa...
src: io.Reader(*io.LimitedReader) *{R: io.Reader(*bufio.Reader) *{buf: []uint8 len: 4096, cap: 4096, [80,85,84,32,47,97,112,112,108,121,32,72,84,84,80,47,49,46,49,13,10,65,117,116,104,111,114,105,122,97,116,105,111,110,58,32,101,121,74,104,98,71,99,105,79,105,7...
data: *io.LimitedReader {R: io.Reader(*bufio.Reader) *{buf: []uint8 len: 4096, cap: 4096, [80,85,84,32,47,97,112,112,108,121,32,72,84,84,80,47,49,46,49,13,10,65,117,116,104,111,114,105,122,97,116,105,111,110,58,32,101,121,74,104,98,71,99,105,79,105,74,73,85,122,...
io.LimitedReader {R: io.Reader(*bufio.Reader) *{buf: []uint8 len: 4096, cap: 4096, [80,85,84,32,47,97,112,112,108,121,32,72,84,84,80,47,49,46,49,13,10,65,117,116,104,111,114,105,122,97,116,105,111,110,58,32,101,121,74,104,98,71,99,105,79,105,74,73,85,122,7...
R: io.Reader(*bufio.Reader) *{buf: []uint8 len: 4096, cap: 4096, [80,85,84,32,47,97,112,112,108,121,32,72,84,84,80,47,49,46,49,13,10,65,117,116,104,111,114,105,122,97,116,105,111,110,58,32,101,121,74,104,98,71,99,105,79,105,74,73,85,122,73,49,78,105,73,115,73...
data: *bufio.Reader {buf: []uint8 len: 4096, cap: 4096, [80,85,84,32,47,97,112,112,108,121,32,72,84,84,80,47,49,46,49,13,10,65,117,116,104,111,114,105,122,97,116,105,111,110,58,32,101,121,74,104,98,71,99,105,79,105,74,73,85,122,73,49,78,105,73,115,73,110,82,53,9...
bufio.Reader {buf: []uint8 len: 4096, cap: 4096, [80,85,84,32,47,97,112,112,108,121,32,72,84,84,80,47,49,46,49,13,10,65,117,116,104,111,114,105,122,97,116,105,111,110,58,32,101,121,74,104,98,71,99,105,79,105,74,73,85,122,73,49,78,105,73,115,73,110,82,53,99...
buf: []uint8 len: 4096, cap: 4096, [80,85,84,32,47,97,112,112,108,121,32,72,84,84,80,47,49,46,49,13,10,65,117,116,104,111,114,105,122,97,116,105,111,110,58,32,101,121,74,104,98,71,99,105,79,105,74,73,85,122,73,49,78,105,73,115,73,110,82,53,99,67,73,54,...+4032 ...
string(): "PUT /apply HTTP/1.1\r\nAuthorization: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTI2OTI3MTksInVzZXJuYW1lIjoiYWRtaW4ifQ.FRffXBWOYd-_CCvMRW8DyIpovcMY0G199giW_NC_j5U\r\nContent-Type: application/json\r\nUser-Agent: PostmanRuntime/7.37.3\r\nAccept: */*\r\nCache-Control: no-cache\r\nPostman-Token: e6adde27-18e0-4139-bba9-2ceb21564188\r\nHost: localhost:8080\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nContent-Length: 104\r\n\r\n{\r\n    \"username\": \"admin\",\r\n    \"leaves\": [ { \"startTime\": \"08/02/2024\", \"endTi...+3584 more"
[0..99]:
[100..199]:
[200..299]:
[300..399]:
[400..499]:
[500..599]:
[600..699]:
[700..799]:
[800..899]:
[900..999]:
[1000..1099]:
[1100..1199]:
[1200..1299]:
[1300..1399]:
[1400..1499]:
[1500..1599]:
[1600..1699]:
[1700..1799]:
[1800..1899]:
[1900..1999]:
[2000..2099]:
[2100..2199]:
[2200..2299]:
[2300..2399]:
[2400..2499]:
[2500..2599]:
[2600..2699]:
[2700..2799]:
[2800..2899]:
[2900..2999]:
[3000..3099]:
[3100..3199]:
[3200..3299]:
[3300..3399]:
[3400..3499]:
[3500..3599]:
[3600..3699]:
[3700..3799]:
[3800..3899]:
[3900..3999]:
[4000..4095]:
rd: io.Reader(*net/http.connReader) *{conn: *net/http.conn {server: *(*"net/http.Server")(0xc00012a4b0), cancelCtx: context.WithCancel.func1, rwc: net.Conn(*net.TCPConn) ..., remoteAddr: "[::1]:50751", tlsState: *crypto/tls.ConnectionState nil, werr: error nil...
r: 536
w: 536
err: error nil
lastByte: 125
lastRuneSize: -1
N: 0
hdr: interface {} nil
r: *bufio.Reader nil
closing: false
doEarlyClose: true
mu: sync.Mutex {state: 0, sema: 0}
sawEOF: true
closed: false
earlyClose: false
onHitEOF: net/http.(*connReader).startBackgroundRead-fm
GetBody: nil
ContentLength: 104
TransferEncoding: []string len: 0, cap: 0, nil
Close: false
Host: "localhost:8080"
Form: net/url.Values nil
PostForm: net/url.Values nil
MultipartForm: *mime/multipart.Form nil
Trailer: net/http.Header nil
RemoteAddr: "[::1]:50751"
RequestURI: "/apply"
TLS: *crypto/tls.ConnectionState nil
Cancel: <-chan struct {} nil
Response: *net/http.Response nil
ctx: context.Context(*context.valueCtx) *{Context: context.Context(*context.valueCtx) ..., key: interface {}(github.com/gorilla/mux.contextKey) *(*interface {})(0xc000387510), val: interface {}(*github.com/gorilla/mux.Route) ...}
